Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"ALL\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b441cb28-26a9-4192-b488-59d6f99b7545\" name=\"Changes\" comment=\"init\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"GOROOT\" url=\"file://$PROJECT_DIR$/../../../../go\" />\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"24LqyYc68C7Hm5MKj5LdOFF31DG\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"configurable..is.expanded\" value=\"false\" />\r\n    <property name=\"configurable.GoLibrariesConfigurable.is.expanded\" value=\"true\" />\r\n    <property name=\"go.format.on.save.advertiser.fired\" value=\"true\" />\r\n    <property name=\"go.formatter.settings.were.checked\" value=\"true\" />\r\n    <property name=\"go.import.settings.migrated\" value=\"true\" />\r\n    <property name=\"go.modules.go.list.on.any.changes.was.set\" value=\"true\" />\r\n    <property name=\"go.sdk.automatically.set\" value=\"true\" />\r\n    <property name=\"go.watchers.conflict.with.on.save.actions.check.performed\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"org.jetbrains.plugins.github.ui.GithubSettingsConfigurable\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\">\r\n      <module name=\"bytedance-classmanager\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <package value=\"bytedance-classmanager\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"go build bytedance-classmanager/step3-arrange_course\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"bytedance-classmanager\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <package value=\"bytedance-classmanager/step3-arrange_course\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$/step3-arrange_course/main.go\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"GoTestRunConfiguration\" factoryName=\"Go Test\">\r\n      <module name=\"bytedance-classmanager\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"DIRECTORY\" />\r\n      <package value=\"bytedance-classmanager\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$\" />\r\n      <framework value=\"gotest\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Go Build.go build bytedance-classmanager/step3-arrange_course\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"init\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"init\" />\r\n  </component>\r\n  <component name=\"VgoProject\">\r\n    <integration-enabled>true</integration-enabled>\r\n    <environment>\r\n      <map>\r\n        <entry key=\"GOPROXY\" value=\"https://goproxy.io\" />\r\n      </map>\r\n    </environment>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,16 +4,38 @@
     <option name="autoReloadType" value="ALL" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="b441cb28-26a9-4192-b488-59d6f99b7545" name="Changes" comment="init" />
+    <list default="true" id="232f4e98-f78a-42c7-97ee-28baa3371f24" name="Default Changelist" comment="添加抢课模块，未进行压测">
+      <change afterPath="$PROJECT_DIR$/step2-member/Register/controller/range.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/step2-member/Register/controller/selectCourse.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/step2-member/Register/myRedis/myRedis.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/.idea/vcs.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/controller/author.go" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/controller/member.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/controller/member.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/go.mod" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/go.sum" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/main.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/request/BindCourseRequest.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/request/BindCourseRequest.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/request/BookCourseRequest.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/request/BookCourseRequest.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/request/CreateCourseRequest.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/request/CreateCourseRequest.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/request/GetCourseRequest.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/request/GetCourseRequest.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/request/GetStudentCourseRequest.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/request/GetStudentCourseRequest.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/request/GetTeacherCourseRequest.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/request/GetTeacherCourseRequest.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/request/ScheduleCourseRequest.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/request/ScheduleCourseRequest.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/request/UnbindCourseRequest.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/request/UnbindCourseRequest.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/response/ScheduleCourseResponse.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/response/ScheduleCourseResponse.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/router/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/router/router.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/types/types.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/types/types.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step2-member/Register/utils/getParams.go" beforeDir="false" afterPath="$PROJECT_DIR$/step2-member/Register/utils/getParams.go" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
-  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../go" />
+  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../../Program Files/Go" />
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -36,17 +58,19 @@
     <property name="go.sdk.automatically.set" value="true" />
     <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$" />
+    <property name="node.js.detected.package.eslint" value="true" />
+    <property name="node.js.selected.package.eslint" value="(autodetect)" />
     <property name="node.js.selected.package.tslint" value="(autodetect)" />
     <property name="settings.editor.selected.configurable" value="org.jetbrains.plugins.github.ui.GithubSettingsConfigurable" />
   </component>
-  <component name="RunManager">
-    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
+  <component name="RunManager" selected="Go Build.go build Register">
+    <configuration name="go build Register" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
       <module name="bytedance-classmanager" />
-      <working_directory value="$PROJECT_DIR$" />
+      <working_directory value="$PROJECT_DIR$/step2-member/Register" />
       <kind value="PACKAGE" />
-      <package value="bytedance-classmanager" />
+      <package value="Register" />
       <directory value="$PROJECT_DIR$" />
-      <filePath value="$PROJECT_DIR$" />
+      <filePath value="$PROJECT_DIR$/step2-member/Register/main.go" />
       <method v="2" />
     </configuration>
     <configuration name="go build bytedance-classmanager/step3-arrange_course" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
@@ -58,18 +82,9 @@
       <filePath value="$PROJECT_DIR$/step3-arrange_course/main.go" />
       <method v="2" />
     </configuration>
-    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
-      <module name="bytedance-classmanager" />
-      <working_directory value="$PROJECT_DIR$" />
-      <kind value="DIRECTORY" />
-      <package value="bytedance-classmanager" />
-      <directory value="$PROJECT_DIR$" />
-      <filePath value="$PROJECT_DIR$" />
-      <framework value="gotest" />
-      <method v="2" />
-    </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Go Build.go build Register" />
         <item itemvalue="Go Build.go build bytedance-classmanager/step3-arrange_course" />
       </list>
     </recent_temporary>
@@ -86,12 +101,44 @@
             <State />
           </value>
         </entry>
+        <entry key="fce251ac-aad5-4cde-aad6-c849d640a996">
+          <value>
+            <State>
+              <option name="SHOW_ONLY_AFFECTED_CHANGES" value="true" />
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="HEAD" />
+                      </list>
+                    </value>
+                  </entry>
+                  <entry key="structure">
+                    <value>
+                      <list>
+                        <option value="dir:C:/Users/shangkai/Desktop/字节后端/bytedance-classmanager/step2-member" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </State>
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="OPEN_GENERIC_TABS">
+      <map>
+        <entry key="fce251ac-aad5-4cde-aad6-c849d640a996" value="TOOL_WINDOW" />
       </map>
     </option>
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="init" />
-    <option name="LAST_COMMIT_MESSAGE" value="init" />
+    <MESSAGE value="member 修复了查找的两个问题" />
+    <MESSAGE value="添加抢课模块，未进行压测" />
+    <option name="LAST_COMMIT_MESSAGE" value="添加抢课模块，未进行压测" />
   </component>
   <component name="VgoProject">
     <integration-enabled>true</integration-enabled>
Index: step2-member/Register/controller/member.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller\r\n\r\nimport (\r\n\t\"Register/request\"\r\n\t\"Register/response\"\r\n\t\"Register/types\"\r\n\t\"Register/utils\"\r\n\t\"encoding/json\"\r\n\t\"fmt\"\r\n\t\"github.com/gin-contrib/sessions\"\r\n\t\"github.com/gin-gonic/gin\"\r\n\t\"net/http\"\r\n\t\"strconv\"\r\n)\r\n\r\nfunc checkParams(params request.CreateMemberRequest) bool {\r\n\tif len(params.Nickname) < 4 || len(params.Nickname) > 20 {\r\n\t\tfmt.Println(\"昵称长度不正确\")\r\n\t\treturn false\r\n\t}\r\n\tif len(params.Username) < 8 || len(params.Username) > 20 {\r\n\t\tfmt.Println(\"用户名长度不正确\")\r\n\t\treturn false\r\n\t}\r\n\t//检查username是否只有大小写\r\n\tfor _, val := range params.Username {\r\n\t\tif (val >= 'a' && val <= 'z') || (val >= 'A' && val <= 'Z') {\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\tfmt.Println(\"用户名只能包含大小写\")\r\n\t\treturn false\r\n\t}\r\n\tif len(params.Password) < 8 || len(params.Password) > 20 {\r\n\t\tfmt.Println(\"密码长度不正确\")\r\n\t\treturn false\r\n\t}\r\n\tif params.UserType != types.Admin && params.UserType != types.Student && params.UserType != types.Teacher {\r\n\t\tfmt.Println(\"用户类型不正确，并不是管理员学生教师三种类型之一\")\r\n\t\treturn false\r\n\t}\r\n\t//检验密码是否同时包括大小写、数字\r\n\tlowCase, highCase, digit := false, false, false\r\n\tfor _, value := range params.Password {\r\n\t\tif value >= '0' && value <= '9' {\r\n\t\t\tdigit = true\r\n\t\t} else if value >= 'a' && value <= 'z' {\r\n\t\t\tlowCase = true\r\n\t\t} else if value >= 'A' && value <= 'Z' {\r\n\t\t\thighCase = true\r\n\t\t}\r\n\t\tif digit && lowCase && highCase {\r\n\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\tif !digit || !lowCase || !highCase {\r\n\t\tfmt.Println(\"用户密码大小写不正确\")\r\n\t\treturn false\r\n\t}\r\n\r\n\treturn true\r\n}\r\nfunc checkPermission(c *gin.Context) bool {\r\n\tsession := sessions.Default(c)\r\n\tuserType, ok := session.Get(\"user_type\").(types.UserType)\r\n\tif !ok || userType != types.Admin {\r\n\t\treturn false\r\n\t}\r\n\treturn true\r\n}\r\n\r\n//创建成员\r\nfunc MemberCreatePost(c *gin.Context) {\r\n\tvar res response.CreateMemberResponse\r\n\tvar createMember request.CreateMemberRequest\r\n\r\n\tif !checkPermission(c) {\r\n\t\tres.Code = types.PermDenied\r\n\t\tc.JSON(http.StatusOK, res)\r\n\t\treturn\r\n\t}\r\n\r\n\tjsons := utils.GetParams(c, createMember)\r\n\tjson.Unmarshal(jsons, &createMember)\r\n\r\n\tif !checkParams(createMember) {\r\n\t\tres.Code = types.ParamInvalid\r\n\t\tc.JSON(http.StatusOK, res)\r\n\t\treturn\r\n\t}\r\n\tvar generateId types.GenerateId\r\n\tgenerateId = types.GenerateId{IsDel: 0, UserType: createMember.UserType, UserName: createMember.Username}\r\n\tcreate := utils.Db.Create(&generateId)\r\n\tif create.Error != nil {\r\n\t\tres.Code = types.UserHasExisted\r\n\t\tc.JSON(http.StatusOK, res)\r\n\t\treturn\r\n\t}\r\n\tmember := types.TMember{Nickname: createMember.Nickname,\r\n\t\tUsername: createMember.Username,\r\n\t\tUserID:   strconv.FormatUint(generateId.ID, 10),\r\n\t\tUserType: createMember.UserType}\r\n\tif generateId.UserType == types.Admin {\r\n\t\tadmin := types.TAdmin{\r\n\t\t\tTMember:  member,\r\n\t\t\tPassword: createMember.Password,\r\n\t\t}\r\n\t\tutils.Db.Create(&admin)\r\n\t} else if generateId.UserType == types.Student {\r\n\t\tstudent := types.TStudent{\r\n\t\t\tTMember:  member,\r\n\t\t\tPassword: createMember.Password,\r\n\t\t}\r\n\t\tutils.Db.Create(&student)\r\n\t} else if generateId.UserType == types.Teacher {\r\n\t\tteacher := types.TTeacher{\r\n\t\t\tTMember:  member,\r\n\t\t\tPassword: createMember.Password,\r\n\t\t}\r\n\t\tutils.Db.Create(&teacher)\r\n\t}\r\n\tres.Code = types.OK\r\n\tres.Data.UserID = strconv.FormatUint(generateId.ID, 10)\r\n\tc.JSON(http.StatusOK, res)\r\n\treturn\r\n}\r\n\r\n//查询成员单个成员\r\nfunc MemberGetOne(c *gin.Context) {\r\n\tvar params request.GetMemberRequest\r\n\tvar res response.GetMemberResponse\r\n\tvar data types.TMember\r\n\tjsons := utils.GetParams(c, params)\r\n\tjson.Unmarshal(jsons, &params)\r\n\tid, err := strconv.Atoi(params.UserID)\r\n\tif err != nil || len(params.UserID) < 1 {\r\n\t\tres.Code = types.ParamInvalid\r\n\t\treturn\r\n\t}\r\n\tgenerateId := types.GenerateId{ID: uint64(id)}\r\n\tfirst := utils.Db.First(&generateId)\r\n\r\n\tif first.Error != nil {\r\n\t\tres.Code = types.UserNotExisted\r\n\t\tres.Data = data\r\n\t\tc.JSON(http.StatusOK, res)\r\n\t\treturn\r\n\t}\r\n\r\n\tif generateId.IsDel == 1 {\r\n\t\tres.Code = types.UserHasDeleted\r\n\t\tres.Data = data\r\n\t\tc.JSON(http.StatusOK, res)\r\n\t\treturn\r\n\t}\r\n\r\n\tif generateId.UserType == types.Admin {\r\n\t\tvar admin types.TAdmin\r\n\t\tutils.Db.Where(\"user_id = ?\", generateId.ID).Find(&admin)\r\n\t\tdata = admin.TMember\r\n\t} else if generateId.UserType == types.Student {\r\n\t\tvar student types.TStudent\r\n\t\tutils.Db.Where(\"user_id = ?\", generateId.ID).Find(&student)\r\n\t\tdata = student.TMember\r\n\t} else if generateId.UserType == types.Teacher {\r\n\t\tvar teacher types.TTeacher\r\n\t\tutils.Db.Where(\"user_id = ?\", generateId.ID).Find(&teacher)\r\n\t\tdata = teacher.TMember\r\n\t}\r\n\tres.Code = types.OK\r\n\tres.Data = data\r\n\tc.JSON(http.StatusOK, res)\r\n\treturn\r\n}\r\n\r\n//查询许多成员\r\nfunc MemberGetList(c *gin.Context) {\r\n\t//防止不传值,所以给了默认值\r\n\tvar requestParams = request.GetMemberListRequest{Limit: -1, Offset: -1}\r\n\tjsons := utils.GetParams(c, requestParams)\r\n\tjson.Unmarshal(jsons, &requestParams)\r\n\tlimit := requestParams.Limit\r\n\toffset := requestParams.Offset\r\n\tvar res response.GetMemberListResponse\r\n\tvar data []types.TMember\r\n\tfmt.Println(limit)\r\n\tfmt.Println(offset)\r\n\tif limit < 0 || offset < 0 { //offset和limit小于0会出错\r\n\t\tres.Code = types.ParamInvalid\r\n\t\tc.JSON(http.StatusOK, res)\r\n\t\treturn\r\n\t}\r\n\tvar list []types.GenerateId\r\n\tutils.Db.Where(\"is_del=?\", 0).Limit(limit).Offset(offset).Find(&list)\r\n\tfor _, v := range list {\r\n\t\tvar member types.TMember\r\n\t\tif v.UserType == types.Admin {\r\n\t\t\tvar admin types.TAdmin\r\n\t\t\tutils.Db.Where(\"user_id = ?\", v.ID).First(&admin)\r\n\t\t\tmember = admin.TMember\r\n\t\t} else if v.UserType == types.Student {\r\n\t\t\tvar student types.TStudent\r\n\t\t\tutils.Db.Where(\"user_id = ?\", v.ID).First(&student)\r\n\t\t\tmember = student.TMember\r\n\t\t} else if v.UserType == types.Teacher {\r\n\t\t\tvar teacher types.TTeacher\r\n\t\t\tutils.Db.Where(\"user_id = ?\", v.ID).First(&teacher)\r\n\t\t\tmember = teacher.TMember\r\n\t\t}\r\n\t\tdata = append(data, member)\r\n\t}\r\n\tif len(data) > 0 {\r\n\t\tres.Code = types.OK\r\n\t} else {\r\n\t\tres.Code = types.UserNotExisted\r\n\t}\r\n\tres.Data.MemberList = data\r\n\tc.JSON(http.StatusOK, res)\r\n\treturn\r\n}\r\n\r\n//更新成员\r\n\r\nfunc MemberUpdate(c *gin.Context) {\r\n\tvar paramRequest request.UpdateMemberRequest\r\n\tjsons := utils.GetParams(c, paramRequest)\r\n\tjson.Unmarshal(jsons, &paramRequest)\r\n\tvar res response.UpdateMemberResponse\r\n\t//update要记住nickname的规定,在这里进行判断\r\n\tif _, err := strconv.Atoi(paramRequest.UserID); err != nil || len(paramRequest.UserID) < 1 || len(paramRequest.Nickname) < 4 || len(paramRequest.Nickname) > 20 {\r\n\t\tres.Code = types.ParamInvalid\r\n\t\tc.JSON(http.StatusOK, res)\r\n\t\treturn\r\n\t}\r\n\tvar generateId types.GenerateId\r\n\tfirst := utils.Db.Where(\"id = ?\", paramRequest.UserID).First(&generateId)\r\n\tif first.Error != nil {\r\n\t\tres.Code = types.UserNotExisted\r\n\t\tc.JSON(http.StatusOK, res)\r\n\t\treturn\r\n\t}\r\n\tif generateId.IsDel == 1 {\r\n\t\tres.Code = types.UserHasDeleted\r\n\t\tc.JSON(http.StatusOK, res)\r\n\t\treturn\r\n\t}\r\n\tres.Code = types.OK\r\n\t//最好用事务去写\r\n\tif generateId.UserType == types.Admin {\r\n\t\tutils.Db.Model(&types.TAdmin{}).Where(\"user_id = ?\", generateId.ID).Update(\"nick_name\", paramRequest.Nickname)\r\n\t\tutils.Db.Model(&types.GenerateId{}).Where(\"id = ?\", generateId.ID).Update(\"nick_name\", paramRequest.Nickname)\r\n\t} else if generateId.UserType == types.Student {\r\n\t\tutils.Db.Model(&types.TStudent{}).Where(\"user_id = ?\", generateId.ID).Update(\"nick_name\", paramRequest.Nickname)\r\n\t\tutils.Db.Model(&types.GenerateId{}).Where(\"id = ?\", generateId.ID).Update(\"nick_name\", paramRequest.Nickname)\r\n\t} else if generateId.UserType == types.Teacher {\r\n\t\tutils.Db.Model(&types.TTeacher{}).Where(\"user_id = ?\", generateId.ID).Update(\"nick_name\", paramRequest.Nickname)\r\n\t\tutils.Db.Model(&types.GenerateId{}).Where(\"id = ?\", generateId.ID).Update(\"nick_name\", paramRequest.Nickname)\r\n\t}\r\n\tc.JSON(http.StatusOK, res)\r\n\treturn\r\n}\r\n\r\n//删除成员\r\nfunc MemberDelete(c *gin.Context) {\r\n\tvar paramsRequest request.DeleteMemberRequest\r\n\tjsons := utils.GetParams(c, paramsRequest)\r\n\tjson.Unmarshal(jsons, &paramsRequest)\r\n\tvar res response.DeleteMemberResponse\r\n\t_, err := strconv.Atoi(paramsRequest.UserID)\r\n\r\n\tif err != nil || len(paramsRequest.UserID) < 1 {\r\n\t\tres.Code = types.ParamInvalid\r\n\t\tc.JSON(http.StatusOK, res)\r\n\t\treturn\r\n\t}\r\n\tvar generateId types.GenerateId\r\n\tfirst := utils.Db.Where(\"id = ?\", paramsRequest.UserID).First(&generateId)\r\n\tif first.Error != nil {\r\n\t\tres.Code = types.UserNotExisted\r\n\t\tc.JSON(http.StatusOK, res)\r\n\t\treturn\r\n\t}\r\n\tif generateId.IsDel == 1 {\r\n\t\tres.Code = types.UserHasDeleted\r\n\t\tc.JSON(http.StatusOK, res)\r\n\t\treturn\r\n\t}\r\n\t//待改进,用事务来处理\r\n\tif generateId.UserType == types.Admin {\r\n\t\tutils.Db.Model(&generateId).Update(\"is_del\", 1)\r\n\t\tutils.Db.Model(&types.TAdmin{}).Where(\"user_id = ?\", generateId.ID).Update(\"is_del\", 1)\r\n\t} else if generateId.UserType == types.Student {\r\n\t\tutils.Db.Model(&generateId).Update(\"is_del\", 1)\r\n\t\tutils.Db.Model(&types.TStudent{}).Where(\"user_id = ?\", generateId.ID).Update(\"is_del\", 1)\r\n\t} else if generateId.UserType == types.Teacher {\r\n\t\tutils.Db.Model(&generateId).Update(\"is_del\", 1)\r\n\t\tutils.Db.Model(&types.TTeacher{}).Where(\"user_id = ?\", generateId.ID).Update(\"is_del\", 1)\r\n\t}\r\n\tres.Code = types.OK\r\n\tc.JSON(http.StatusOK, res)\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step2-member/Register/controller/member.go b/step2-member/Register/controller/member.go
--- a/step2-member/Register/controller/member.go	
+++ b/step2-member/Register/controller/member.go	
@@ -109,12 +109,14 @@
 		student := types.TStudent{
 			TMember:  member,
 			Password: createMember.Password,
+			IsRange:  0,
 		}
 		utils.Db.Create(&student)
 	} else if generateId.UserType == types.Teacher {
 		teacher := types.TTeacher{
 			TMember:  member,
 			Password: createMember.Password,
+			IsRange:  0,
 		}
 		utils.Db.Create(&teacher)
 	}
Index: step2-member/Register/request/CreateCourseRequest.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package request\r\n/**\r\n\t创建课程请求\r\n\tMethod: Post\r\n */\r\n\r\ntype CreateCourseRequest struct {\r\n\tName string\r\n\tCap  int\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step2-member/Register/request/CreateCourseRequest.go b/step2-member/Register/request/CreateCourseRequest.go
--- a/step2-member/Register/request/CreateCourseRequest.go	
+++ b/step2-member/Register/request/CreateCourseRequest.go	
@@ -1,10 +1,11 @@
 package request
+
 /**
-	创建课程请求
-	Method: Post
- */
+创建课程请求
+Method: Post
+*/
 
 type CreateCourseRequest struct {
-	Name string
-	Cap  int
+	Name string `json:"name"`
+	Cap  int    `json:"cap"`
 }
Index: step2-member/Register/request/BookCourseRequest.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package request\r\n/**\r\n\t课程请求\r\n */\r\ntype BookCourseRequest struct {\r\n\tStudentID string\r\n\tCourseID  string\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step2-member/Register/request/BookCourseRequest.go b/step2-member/Register/request/BookCourseRequest.go
--- a/step2-member/Register/request/BookCourseRequest.go	
+++ b/step2-member/Register/request/BookCourseRequest.go	
@@ -1,8 +1,9 @@
 package request
+
 /**
-	课程请求
- */
+课程请求
+*/
 type BookCourseRequest struct {
-	StudentID string
-	CourseID  string
+	StudentID string `json:"student_id"`
+	CourseID  string `json:"course_id"`
 }
